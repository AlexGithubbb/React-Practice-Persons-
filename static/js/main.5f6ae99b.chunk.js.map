{"version":3,"sources":["containers/App.module.css","components/Persons/Person/Person.module.css","components/hoc/Aux.js","components/hoc/withClass.js","components/Persons/Person/Person.js","components/Persons/Persons.js","components/Cockpit/Cockpit.js","containers/App.js","registerServiceWorker.js","index.js","components/Cockpit/Cockpit.module.css"],"names":["module","exports","App","Person","aux","props","children","withClass","WrappedComponent","className","react_default","a","createElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputElementRef","React","createRef","current","focus","_this$props","name","age","click","change","isAuthenticated","console","log","Aux","onClick","key","type","onChange","value","ref","Component","classes","Persons","prevProps","prevState","message","snapshot","persons","map","person","index","Persons_Person_Person","id","event","isAuth","PureComponent","memo","toggleBtnRef","useRef","useEffect","btnClasses","showPersons","red","assignedClasses","personsLength","push","bold","Cockpit","title","join","auth","state","oterState","showCockpit","currentCounter","switchNameHandler","newName","setState","changeNameHandler","personIndex","findIndex","p","objectSpread","target","toConsumableArray","togglePersonHandler","doesShow","deletePersonHandler","splice","checkAuthentication","nextProps","nextState","_this2","components_Persons_Persons","components_Cockpit_Cockpit","mainTitle","length","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","containers_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","green"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,IAAA,sCCAlBF,EAAAC,QAAA,CAAkBE,OAAA,0PCCHC,EAFH,SAAAC,GAAK,OAAIA,EAAMC,UCgBZC,EARG,SAACC,EAAkBC,GACnC,OAAO,SAAAJ,GAAK,OACVK,EAAAC,EAAAC,cAAA,OAAKH,UAAaA,GAChBC,EAAAC,EAAAC,cAACJ,EAAqBH,MCmCbE,gBAjCb,SAAAJ,EAAYE,GAAM,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAb,IAChBU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAX,GAAAgB,KAAAH,KAAMX,KACDe,gBAAkBC,IAAMC,YAFbT,mFAMhBG,KAAKI,gBAAgBG,QAAQC,yCAEvB,IAAAC,EACyDT,KAAKX,MAA5DqB,EADFD,EACEC,KAAMC,EADRF,EACQE,IAAKrB,EADbmB,EACanB,SAAUsB,EADvBH,EACuBG,MAAOC,EAD9BJ,EAC8BI,OAAQC,EADtCL,EACsCK,gBAE5C,OADAC,QAAQC,IAAI,4BAEVtB,EAAAC,EAAAC,cAACqB,EAAD,KACGH,EAAkBpB,EAAAC,EAAAC,cAAA,2BAAuBF,EAAAC,EAAAC,cAAA,0BAG1CF,EAAAC,EAAAC,cAAA,KAAGsB,QAASN,GAAZ,SAA4BF,EAA5B,YAA2CC,EAA3C,cACAjB,EAAAC,EAAAC,cAAA,SAAIN,GACJI,EAAAC,EAAAC,cAAA,SAAOuB,IAAI,KAAKC,KAAK,OAAOC,SAAUR,EAAQS,MAAOZ,EAAMa,IAAOvB,KAAKI,0BAxB1DoB,aAuCYC,IAAQtC,QCO1BuC,kMA7BWC,EAAWC,GAEjC,OADAb,QAAQC,IAAI,wCACL,CAAEa,QAAS,uEAGDF,EAAWC,EAAWE,GACvCf,QAAQC,IAAI,mCACZD,QAAQC,IAAIc,oCAGL,IAAAjC,EAAAG,KAEP,OADAe,QAAQC,IAAI,6BACLhB,KAAKX,MAAM0C,QAAQC,IAAI,SAACC,EAAQC,GACrC,OACExC,EAAAC,EAAAC,cAACuC,EAAD,CAEEhB,IAAKc,EAAOG,GACZxB,MAAO,kBAAMf,EAAKR,MAAMuB,MAAMsB,IAC9BxB,KAAMuB,EAAOvB,KACbC,IAAKsB,EAAOtB,IACZE,OAAQ,SAAAwB,GAAK,OAAIxC,EAAKR,MAAMwB,OAAOwB,EAAOJ,EAAOG,KACjDtB,gBAAmBjB,EAAKR,MAAMiD,kBAzClBC,iCCiDPlC,MAAMmC,KAlDL,SAACnD,GACf,IAAMoD,EAAeC,iBAAO,MAG5BC,oBAAU,WAMR,OALA5B,QAAQC,IAAI,0BAIZyB,EAAalC,QAAQK,QACf,WAEJG,QAAQC,IAAI,4CAGb,IAEH2B,oBAAU,WAER,OADA5B,QAAQC,IAAI,8BACL,WACLD,QAAQC,IAAI,iDAIhB,IAAI4B,EAAa,GAEbvD,EAAMwD,cACRD,EAAanB,IAAQqB,KAIvB,IAAIC,EAAkB,GAQtB,OAPI1D,EAAM2D,eAAiB,GACzBD,EAAgBE,KAAKxB,IAAQqB,KAE3BzD,EAAM2D,eAAiB,GACzBD,EAAgBE,KAAKxB,IAAQyB,MAI3BxD,EAAAC,EAAAC,cAAA,OAAKH,UAAWgC,IAAQ0B,SAEtBzD,EAAAC,EAAAC,cAAA,UAAKP,EAAM+D,OACX1D,EAAAC,EAAAC,cAAA,KAAGH,UAAWsD,EAAgBM,KAAK,MAAnC,2BACA3D,EAAAC,EAAAC,cAAA,UAAQ2B,IAAMkB,EAAchD,UAAWmD,EAAY1B,QAAS7B,EAAMuB,OAAlE,kBACAlB,EAAAC,EAAAC,cAAA,UAAQsB,QAAS7B,EAAMiE,MAAvB,aC4FO/D,gBAnIb,SAAAL,IAAc,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAd,IACZW,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAZ,GAAAiB,KAAAH,QAIFuD,MAAQ,CACNxB,QAAS,CACP,CAAEK,GAAI,IAAK1B,KAAM,UAAWC,IAAK,IACjC,CAAEyB,GAAI,IAAK1B,KAAM,QAASC,IAAK,IAC/B,CAAEyB,GAAI,IAAK1B,KAAM,SAAUC,IAAK,KAElC6C,UAAW,wBACXX,aAAa,EACbY,aAAa,EACbC,eAAgB,EAChB5C,iBAAiB,GAfLjB,EAuBd8D,kBAAoB,SAAAC,GAClB/D,EAAKgE,SAAS,CACZ9B,QAAS,CACP,CAAEK,GAAI,IAAK1B,KAAMkD,EAASjD,IAAK,IAC/B,CAAEyB,GAAI,IAAK1B,KAAM,QAASC,IAAK,IAC/B,CAAEyB,GAAI,IAAK1B,KAAM,WAAYC,IAAK,QA5B1Bd,EAiCdiE,kBAAoB,SAACzB,EAAOD,GAC1B,IAAM2B,EAAclE,EAAK0D,MAAMxB,QAAQiC,UAAU,SAAAC,GAC/C,OAAOA,EAAE7B,KAAOA,IAEZH,EAAMnC,OAAAoE,EAAA,EAAApE,CAAA,GAAQD,EAAK0D,MAAMxB,QAAQgC,IAEvC9B,EAAOvB,KAAO2B,EAAM8B,OAAO7C,MAE3B,IAAMS,EAAOjC,OAAAsE,EAAA,EAAAtE,CAAOD,EAAK0D,MAAMxB,SAG/BA,EAAQgC,GAAe9B,EAEvBpC,EAAKgE,SAAS,SAACjC,EAAWvC,GACxB,MAAO,CACL0C,QAASA,EACT2B,eAAgB9B,EAAU8B,eAAiB,MAjDnC7D,EAsDdwE,oBAAsB,WACpB,IAAMC,EAAWzE,EAAK0D,MAAMV,YAC5BhD,EAAKgE,SAAS,CAAEhB,aAAcyB,KAxDlBzE,EA2Dd0E,oBAAsB,SAAAR,GAEpB,IAAMhC,EAAOjC,OAAAsE,EAAA,EAAAtE,CAAOD,EAAK0D,MAAMxB,SAC/BA,EAAQyC,OAAOT,EAAa,GAC5BlE,EAAKgE,SAAS,CAAE9B,aA/DJlC,EAkEd4E,oBAAsB,WACpB5E,EAAKgE,SAAS,CAAE/C,iBAAiB,KAjEjCC,QAAQC,IAAI,uBAFAnB,mFAuEZkB,QAAQC,IAAI,4EAGQ0D,EAAWC,GAE/B,OADA5D,QAAQC,IAAI,mCACL,+CASPD,QAAQC,IAAI,gEAGL,IAAA4D,EAAA5E,KACPe,QAAQC,IAAI,yBACZ,IAAIe,EAAU,KAiBd,OAhBI/B,KAAKuD,MAAMV,cACbd,EACErC,EAAAC,EAAAC,cAACiF,EAAD,CACE9C,QAAS/B,KAAKuD,MAAMxB,QACpBnB,MAAOZ,KAAKuE,oBACZ1D,OAAQb,KAAK8D,kBACbxB,OAAQtC,KAAKuD,MAAMzC,mBAYvBpB,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAAA,UACEsB,QAAS,WAAO0D,EAAKf,SAAS,CAAEJ,aAAa,MAD/C,oBAMCzD,KAAKuD,MAAME,YACV/D,EAAAC,EAAAC,cAACkF,EAAD,CACE1B,MAAOpD,KAAKX,MAAM0F,UAClBnE,MAAOZ,KAAKqE,oBACZrB,cAAehD,KAAKuD,MAAMxB,QAAQiD,OAClCnC,YAAa7C,KAAKuD,MAAMV,YACxBS,KAAMtD,KAAKyE,sBAEX,KACH1C,sDA3GyB1C,EAAOkE,GAErC,OADAxC,QAAQC,IAAI,mCAAoC3B,GACzCkE,SArBO/B,aAoIYC,IAAQvC,KClIhC+F,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxC,QACfkC,UAAUC,cAAcQ,WAK1BnF,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBmF,MAAM,SAAAC,GACLrF,QAAQqF,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO5G,EAAAC,EAAAC,cAAC2G,EAAD,CAAKxB,UAAY,2BAA4ByB,SAASC,eAAe,SDctE,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,2BAAwBxB,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAsB,OAAMH,2BAAN,sBAEP1B,GAiDV,SAAiCO,GAE/BuB,MAAMvB,GACHI,KAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,KAAK,SAAAC,GACjCA,EAAayB,aAAa1B,KAAK,WAC7BT,OAAOC,SAASmC,aAKpBhC,EAAgBC,KAGnBW,MAAM,WACLpF,QAAQC,IACN,mEArEAwG,CAAwBhC,GAIxBC,UAAUC,cAAc2B,MAAMzB,KAAK,WACjC7E,QAAQC,IACN,+GAMJuE,EAAgBC,MCzCxBiC,sBCNAzI,EAAAC,QAAA,CAAkB6D,IAAA,qBAAA4E,MAAA,uBAAAxE,KAAA,sBAAAC,QAAA","file":"static/js/main.5f6ae99b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2S09a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__2XDAI\"};","const aux = props => props.children;\n\nexport default aux;\n","import React from 'react';\n\n// const WithClass = props => {\n//   return <div className={props.classes}>{props.children}</div>;\n// };\n\n// export default WithClass;\n\nconst withClass = (WrappedComponent, className) => {\n  return props => (\n    <div className = {className}>\n      <WrappedComponent {...props}/>\n    </div>\n  )\n};\n\nexport default withClass;\n","import React, {Component} from 'react';\nimport classes from './Person.module.css';\n// import Radium from 'radium';\nimport Aux from '../../hoc/Aux';\nimport withClass from '../../hoc/withClass';\nimport PropTypes from 'prop-types';\n\nclass Person extends Component{\n  // const media = {\n  //   '@media (min-width: 500px)' : {\n  //     width: \"450px\"\n  //   }\n  // }\n  constructor(props){\n    super(props);\n    this.inputElementRef = React.createRef();\n  }\n\n  componentDidMount(){\n    this.inputElementRef.current.focus();\n  }\n  render(){\n    const { name, age, children, click, change, isAuthenticated} = this.props;\n    console.log('[Person.js] rendering...');\n    return (\n      <Aux>\n        {isAuthenticated ? <p>Authenticated!</p>: <p>Please Login </p>} \n        {/* <div className={classes.Person}> */}\n        {/* I'm a {name} and I'm {Math.floor(Math.random()*30)} years old */}\n        <p onClick={click}  >I'm a {name} and I'm {age} years old</p>\n        <p>{children}</p>\n        <input key='i3' type=\"text\" onChange={change} value={name} ref = {this.inputElementRef}/>\n      {/* </div> */}\n      </Aux>\n    )\n  }\n}\n\nPerson.propTypes = {\n  click: PropTypes.func,\n  change: PropTypes.func,\n  name: PropTypes.string,\n  age: PropTypes.number,\n}\n\n\nexport default withClass(Person, classes.Person);\n","import React, { PureComponent } from 'react';\nimport Person from './Person/Person';\n\n\nclass Persons extends PureComponent {\n  // static getDerivedStateFromProps(props, state) {\n  //   console.log('[App.js] getDrviedStateFromProps', props);\n  //   return state;\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[Persons.js] shouldComponentUpdate');\n  //   // this check is not coming for free, it could be unnecessary in the case that when parent component gets update, the children compo get update as well, like persons and person. But in this case, persons has nothing to do with App(parent comp), so check is good\n  //   if (\n  //     nextProps.persons !== this.props.persons ||\n  //     nextProps.change !== this.props.change ||\n  //     nextProps.click !== this.props.click\n  //   ) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('[Persons.js] getSnapshotBeforeUpdate');\n    return { message: 'this is snapshot message' };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('[Persons.js] componentDidUpdate');\n    console.log(snapshot);\n  }\n\n  render() {\n    console.log('[Persons.js] rendering...');\n    return this.props.persons.map((person, index) => {\n      return (\n        <Person\n          // onClick={this.switchNameHandler.bind(this, 'Jack No.2')}\n          key={person.id}\n          click={() => this.props.click(index)}\n          name={person.name}\n          age={person.age}\n          change={event => this.props.change(event, person.id)}\n          isAuthenticated = {this.props.isAuth}\n        />\n      );\n    });\n  }\n}\n\n\nexport default Persons;\n","import React, { useEffect, useRef } from'react';\nimport classes from './Cockpit.module.css';\n\nconst Cockpit = (props) => {\n  const toggleBtnRef = useRef(null);\n\n\n  useEffect(() => {\n    console.log('[Cockpit.js] useEffect');\n    // const timer =  setTimeout(() => {\n    //   alert('Saved data to cloud!')\n    // }, 1000);\n    toggleBtnRef.current.click();\n    return() => {\n      // clearTimeout(timer);\n      console.log('[Cokpit.js] clearnUp work in useEffect');\n    }\n  // }, [props.persons]) // run only when persons changed.\n  }, []) // run only for the first time\n\n  useEffect(() => {\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {\n      console.log('[Cokpit.js] 2nd clearnUp work in useEffect');\n    }\n  })\n\n  let btnClasses = '';\n\n  if (props.showPersons) {\n    btnClasses = classes.red;\n    // console.log(btnClasses);\n  }\n\n  let assignedClasses = [];\n  if (props.personsLength <= 2) {\n    assignedClasses.push(classes.red);\n  }\n  if (props.personsLength <= 1) {\n    assignedClasses.push(classes.bold);\n    // console.log(assignedClasses);\n  }\n  return (\n      <div className={classes.Cockpit}>\n        {/* <h1>Welcome to React world</h1> */}\n        <h1>{props.title}</h1>\n        <p className={assignedClasses.join(' ')}>This is really working!</p>\n        <button ref ={toggleBtnRef} className={btnClasses} onClick={props.click}>Toggle persons</button>\n        <button onClick={props.auth}>log in</button>\n      </div>\n  )\n}\n\nexport default React.memo(Cockpit);\n","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\n// import Radium, { StyleRoot } from 'radium';\nimport withClass from '../components/hoc/withClass';\nimport Aux from '../components/hoc/Aux';\n\nclass App extends Component {\n  constructor() {\n    super();\n    console.log('[App.js] contructor');\n  }\n\n  state = {\n    persons: [\n      { id: '1', name: 'Yisheng', age: 19 },\n      { id: '2', name: 'Bowei', age: 25 },\n      { id: '3', name: 'Andrew', age: 44 }\n    ],\n    oterState: 'this is another state',\n    showPersons: false,\n    showCockpit: true,\n    currentCounter: 0,\n    isAuthenticated: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDrviedStateFromProps', props);\n    return state;\n  }\n\n  switchNameHandler = newName => {\n    this.setState({\n      persons: [\n        { id: '1', name: newName, age: 19 },\n        { id: '2', name: 'Bowei', age: 25 },\n        { id: '3', name: 'Jennifer', age: 44 }\n      ]\n    });\n  };\n\n  changeNameHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    const person = { ...this.state.persons[personIndex] }; // get the correspoding person\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n\n    // update array with the personIndex we fetched before\n    persons[personIndex] = person;\n\n    this.setState((prevState, props) => {\n      return {\n        persons: persons,\n        currentCounter: prevState.currentCounter + 1\n      };\n    });\n  };\n\n  togglePersonHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n\n  deletePersonHandler = personIndex => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons]; // this will spread the original array and put each item into a new array => (new)persons\n    persons.splice(personIndex, 1);\n    this.setState({ persons }); // this.setState({persons: persons})\n  };\n\n  checkAuthentication = () => {\n    this.setState({ isAuthenticated: true });\n  };\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n    return true;\n  }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Persons.js] getSnapshotBeforeUpdate');\n  //   return { message: 'this is snapshot message' }\n  // }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n\n  render() {\n    console.log('[App.js] rendering...');\n    let persons = null;\n    if (this.state.showPersons) {\n      persons = (\n        <Persons\n          persons={this.state.persons}\n          click={this.deletePersonHandler}\n          change={this.changeNameHandler}\n          isAuth={this.state.isAuthenticated}\n        />\n      );\n      // button.backgroundColor = 'red';\n      // button[':hover'] = {\n      //   backgroundColor: 'salmon',\n      //   color: 'black'\n      // };\n    }\n\n    return (\n      // <A className={classes.App}>\n      <Aux>\n        <button\n          onClick={() => {this.setState({ showCockpit: false });\n        }}>\n          Clean up Cockpit\n        </button>\n        \n        {this.state.showCockpit ? (\n          <Cockpit\n            title={this.props.mainTitle}\n            click={this.togglePersonHandler}\n            personsLength={this.state.persons.length}\n            showPersons={this.state.showPersons}\n            auth={this.checkAuthentication}\n          />\n        ) : null}\n        {persons}\n      </Aux>\n    );\n  }\n}\n\nexport default withClass(App, classes.App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App mainTitle = 'Welcome to React World'/>, document.getElementById('root'));\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Cockpit_red__317DD\",\"green\":\"Cockpit_green__32rhX\",\"bold\":\"Cockpit_bold__2pEjN\",\"Cockpit\":\"Cockpit_Cockpit__TzG6M\"};"],"sourceRoot":""}